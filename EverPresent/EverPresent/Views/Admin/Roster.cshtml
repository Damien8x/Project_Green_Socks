@model EverPresent.Models.StudentViewModel
@Scripts.Render("~/Scripts/script.js")






@{

    int count = 0;
}





<h2>Students</h2>

<div class="container">
    <div class="row text-center">

        @{
            if (Model.StudentList == null || !Model.StudentList.Any())
            {
                <br />
                <p>No Mogwai in the System</p>
                <br />
            }
            else
            {

                foreach (var item in Model.StudentList)
                {

                    <div class="col-sm-2">
                        @{ count++; string id = "id" + count;}
                        <!--If a student is clicked, the header and line graph will change-->
                        <p id=@id value=@item.Name onclick="clickedStudent(this)">
                            <img src="~/image/@item.AvatarId" width="75" height="75" />
                        </p>

                        <br />
                        <span>
                            @item.Name
                        </span>

                    </div>
                }
            }
        }

    </div>
    <br />

    <h2 id="head">Click a Student above to view Attendance Profile</h2>
    @*<br />*@


    @*<div style="width:40%; float:right">
        <iframe src="https://calendar.google.com/calendar/embed?title=Middle%20College&amp;showTitle=0&amp;showPrint=0&amp;showCalendars=0&amp;showTz=0&amp;height=600&amp;wkst=1&amp;bgcolor=%23999999&amp;src=g692kkkicuib1h345hp43732i4%40group.calendar.google.com&amp;color=%230a2b0e&amp;ctz=America%2FLos_Angeles" style=" border:solid 1px #777" width="400" height="400" frameborder="0" scrolling="no"></iframe>
        @Html.ActionLink("Edit Calendar", "Calendar", "Admin", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-default" })
        @Html.ActionLink("Generate Report", "GenerateReports", "Admin", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-default" })
        @Html.ActionLink("Edit Attendance", "EditAndrewAttendance", "Admin", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-default" })
        @Html.ActionLink("Edit Student", "EditAndrew", "Student", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-default" })
    </div>*@


    @*<img src="~/image/Attendance_vs_avg.png" alt=" = avg attendance" height="450" width="600" />
    <img src="~/image/avg_attendance.png" alt=" avg attendance" height="300" width="400" />
    <img src="~/image/On_time.png" alt="on time" height="300" ; width="400" />*@

</div>

<head>
    <!-- Plotly.js -->
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <!-- Numeric JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/numeric/1.2.6/numeric.min.js"></script>
</head>

<body>
    <div id="myDiv"><!-- Plotly chart will be drawn inside this DIV --></div>
    <!--Editable Attendance table-->
    <div id="time" class="container" style="width:50%; display:none" align="left">
        <div class="row">

            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>@DateTime.Today.ToString("D")</th>
                            <th>Signed In</th>
                            <th>Signed Out</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>1</td>
                            <td contenteditable="true">9:15 am</td>
                            <td contenteditable="true">11:09 am</td>
                        </tr>
                        <tr>
                            <td>2</td>
                            <td contenteditable="true">12:28 pm</td>
                            <td contenteditable="true">2:45 pm</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <button onclick="document.getElementById('time').style.display = 'none'" class="btn btn-default">Close</button>
    </div>
    <div id="secondDiv" style="width:60%; float:left"><!-- Plotly chart will be drawn inside this DIV --></div>
    <div id="cal" style="width:40%; float:right; visibility:hidden">
        <iframe src="https://calendar.google.com/calendar/embed?title=Middle%20College&amp;showTitle=0&amp;showPrint=0&amp;showCalendars=0&amp;showTz=0&amp;height=600&amp;wkst=1&amp;bgcolor=%23999999&amp;src=g692kkkicuib1h345hp43732i4%40group.calendar.google.com&amp;color=%230a2b0e&amp;ctz=America%2FLos_Angeles" style=" border:solid 1px #777" width="400" height="400" frameborder="0" scrolling="no"></iframe>
        @Html.ActionLink("Edit Calendar", "Calendar", "Admin", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-default" })
        @Html.ActionLink("Generate Report", "GenerateReports", "Admin", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-default" })
        <button id="timeButton" class="btn btn-default" onclick="
            document.getElementById('time').style.display = 'block'" style="visibility:hidden">
            Edit Attendance
        </button>
        @*@Html.ActionLink("Edit Attendance", "EditAndrewAttendance", "Admin", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-default" })*@
        <button id="registerLink" class="btn btn-default" onclick="
            var person = prompt('Add tokens:', '');">
            Edit Student
        </button>
        @*@Html.ActionLink("Edit Student", "EditAndrew", "Student", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-default" })*@
    </div>
    <script>
        var n = 4;
        var y = [];

        function clickedStudent(student) {
            // make the calendar visible
            document.getElementById("cal").style.visibility = "visible";
            document.getElementById("timeButton").style.visibility = "visible";
            document.getElementById('head').innerHTML = student.getAttribute("value");

            // randomize points on line graph
            for (i = 0; i < n; i++) {
                y[i] = Math.random() * 100;
            }
            var StudentAttendance = {
                x: [1, 2, 3, 4],
                y: y,
                type: 'scatter',
                name: 'Student Attendance'
            };
            var AverageAttendance = {
                x: [1, 2, 3, 4],
                y: [100, 90, 95, 88],
                type: 'scatter',
                name: 'Average Attendance'
            };
            var data = [AverageAttendance, StudentAttendance];
            // plot the data for the line graph
            Plotly.newPlot('myDiv', data);

            var data = [{
                values: [85, 15],
                labels: ['85%', '15%'],
                domain: {
                    x: [0, .48]
                },
                name: 'Attendance',
                text: 'Attendance',
                textposition: 'inside',
                hoverinfo: 'label+percent+name',
                hole: .4,
                type: 'pie'
            }, {
                values: [25, 75],
                labels: ['25%', '75%'],
                domain: { x: [.52, 1] },
                name: 'On Time',
                text: 'On Time',
                textposition: 'inside',
                hoverinfo: 'label+percent+name',
                hole: .4,
                type: 'pie'
            }];

            var layout = {
                annotations: [
                    {
                        font: {
                            size: 13
                        },
                        showarrow: false,
                        x: 0.16,
                        y: 0.5,
                        text: 'Attendance'
                    },
                    {
                        font: {
                            size: 13
                        },
                        showarrow: false,
                        x: 0.81,
                        y: 0.5,
                        text: 'On Time'
                    }
                ]
            };
            // plot the data for the pie charts
            Plotly.newPlot('secondDiv', data, layout);
        }

    </script>

</body>


@*@model EverPresent.Models.StudentViewModel
    @Scripts.Render("~/Scripts/script.js")






    @{

        int count = 0;
    }





    <h2>Students</h2>

    <div class="container">
        <div class="row text-center">

            @{
                if (Model.StudentList == null || !Model.StudentList.Any())
                {
                    <br />
                    <p>No Mogwai in the System</p>
                    <br />
                }
                else
                {

                    foreach (var item in Model.StudentList)
                    {

                        <div class="col-sm-2">
                            @{ count++; string id = "id" + count;}
                            <p id="@id"> <img src="~/image/@item.AvatarId" width="75" height="75" /></p>

                            <br />
                            <span>
                                @item.Name
                            </span>

                        </div>
                    }
                }
            }

        </div>
        <br />
        <br />

    </div>

    <script>


        document.getElementById("id1").addEventListener("click", myFunction);
        document.getElementById("id2").addEventListener("click", myFunction);
        document.getElementById("id3").addEventListener("click", myFunction);
        document.getElementById("id4").addEventListener("click", myFunction);
        document.getElementById("id5").addEventListener("click", myFunction);
        document.getElementById("id6").addEventListener("click", myFunction);
        document.getElementById("id6").addEventListener("click", myFunction);
        document.getElementById("id8").addEventListener("click", myFunction);



            function myFunction()
            {
                window.location = "Andrew";

             }



    </script>*@